# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Javascript routes
GET /javascriptRoutes    						controllers.Application.javascriptRoutes

# Home page
GET     /                           			controllers.Application.index

GET 	/filter									controllers.Application.filter(filterStr : String = "")
GET 	/filter/:filterStr						controllers.Application.filter(filterStr : String)	

#Project routes
GET		/project/new							controllers.ProjectController.create
POST	/project/new							controllers.ProjectController.submit
GET		/project/:id 							controllers.ProjectController.project(id : Int)
POST	/project/:id/edit						controllers.ProjectController.edit(id : Int)
POST	/project/:id/leave 						controllers.ProjectController.leave(id : Int)
POST 	/project/:id/like 						controllers.ProjectController.like(id : Int)
POST 	/project/:id/unlike 					controllers.ProjectController.unlike(id : Int)
POST 	/project/:id/follow 					controllers.ProjectController.follow(id : Int)
POST 	/project/:id/unfollow 					controllers.ProjectController.unfollow(id : Int)

GET 	/project/json/user 						controllers.ProjectController.jsonForUser
GET 	/project/json/all 						controllers.ProjectController.jsonForAll

#Project Update routes
POST	/project/:id/update/submit				controllers.ProjectUpdateController.submit(id : Int)
POST 	/project/:id/update/:author/:ts/edit 	controllers.ProjectUpdateController.edit(id : Int, author : String, ts : String)
POST 	/project/:id/update/:author/:ts/delete 	controllers.ProjectUpdateController.delete(id : Int, author : String, ts : String)
POST 	/project/:id/update/:author/:ts/like 	controllers.ProjectUpdateController.like(id : Int, author : String, ts : String)
POST 	/project/:id/update/:author/:ts/unlike 	controllers.ProjectUpdateController.unlike(id : Int, author : String, ts : String)

#Login routes
GET		/login 									controllers.Application.login(path : String = "")
GET		/login/*path 							controllers.Application.login(path : String)
POST	/tryLogin								controllers.Application.tryLogin(path : String = "")
POST	/tryLogin/*path							controllers.Application.tryLogin(path : String)

#Activation routes
GET 	/activateNEW 							controllers.ActivationController.activateNEW(path : String = "")
POST 	/activateNEW/try 						controllers.ActivationController.tryActivateNEW
GET 	/activateNEW/non-sg 					controllers.ActivationController.activateNonSG
GET 	/activateNEW/*path 						controllers.ActivationController.activateNEW(path : String)
GET 	/activate/resend 						controllers.ActivationController.resendActivation
POST	/activate/resend/try					controllers.ActivationController.tryResendActivation
GET 	/activate/:username/:uuid				controllers.ActivationController.activate(username : String, uuid : String)
POST	/activate/try 							controllers.ActivationController.tryActivate
GET 	/activate/forgot 						controllers.ActivationController.forgotPassword
POST 	/activate/forgot/try 					controllers.ActivationController.tryForgotPassword
GET 	/reset 									controllers.ActivationController.resetPassword(username : String, uuid : String)
POST	/reset/try 								controllers.ActivationController.tryResetPassword

#Admin routes
GET 	/admin									controllers.AdminController.admin
POST 	/admin/user/create 						controllers.AdminController.createUser
GET		/admin/user/delete/:username 			controllers.AdminController.deleteUser(username : String)
GET 	/admin/project/delete/:id 				controllers.AdminController.deleteProject(id : Int)
GET     /admin/metrics              			com.kenshoo.play.metrics.MetricsController.metrics

#Moderation routes
GET 	/moderation 							controllers.ModerationController.moderation
POST 	/moderation/emeritus/:username 			controllers.ModerationController.emeritus(username : String)
POST 	/moderation/verify/:username 			controllers.ModerationController.verify(username : String)
POST 	/moderation/edit/:username 				controllers.ModerationController.editUserPrivileges(username : String)
POST 	/moderaiton/edit/:username/following 	controllers.ModerationController.editUserFollowing(username : String)

#Accountabilty routes
GET 	/accountability 							controllers.ModerationController.accountability

#Request routes
POST	/request/join/:projectId 				controllers.RequestController.join(projectId : Int)
POST	/request/accept/:projectId/:requester 	controllers.RequestController.accept(projectId : Int, requester : String)
POST	/request/ignore/:projectId/:requester 	controllers.RequestController.ignore(projectId : Int, requester : String)

#Email routes
GET 	/email/acceptRequest/:projectId/:requester 	controllers.RequestController.decide(projectId : Int, requester : String, doesAccept : Boolean = true)
GET 	/email/ignoreRequest/:projectId/:requester 	controllers.RequestController.decide(projectId : Int, requester : String, doesAccept : Boolean = false)


#Notification routes
POST	/notification/resetUnread				controllers.NotificationController.resetUnread
POST	/notification/countUnread				controllers.NotificationController.getUnreadCount
POST	/notification/ignore/:timeCreated		controllers.NotificationController.ignore(timeCreated : String)
POST	/notification/clearAll 					controllers.NotificationController.clearAll

#Office Hour routes
POST /officehour/logHour controllers.OfficeHourController.logHour

#Misc routes
GET		/signout								controllers.Application.signout
GET		/uploads/:file							controllers.Application.uploads(file : String)
GET 	/feedback 								controllers.Application.feedback
POST 	/feedback/submit 						controllers.Application.submitFeedback

GET 	/getting-started						controllers.Application.gettingStarted

GET 	/search 								controllers.Application.search(query : String = "")
GET 	/search/:query 							controllers.Application.search(query : String)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               			controllers.Assets.at(path="/public", file)

GET 	/secure 								controllers.ShibbolethController.secure(path : String = "")
GET 	/secure/ 								controllers.ShibbolethController.secure(path : String = "")
GET 	/secure/*path 							controllers.ShibbolethController.secure(path : String)

GET 	/positions 								controllers.UserController.positionJson

GET		/:username								controllers.UserController.user(username)
POST 	/:username/profile/upload 				controllers.UserController.profilePic(username)
POST	/:follower/follow/:toFollow 			controllers.UserController.follow(follower : String, toFollow : String)
POST 	/:follower/unfollow/:toFollow 			controllers.UserController.unfollow(follower : String, toFollow : String)

